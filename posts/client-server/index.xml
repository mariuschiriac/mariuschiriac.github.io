<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Client Server on Marius Chiriac</title><link>https://mariuschiriac.github.io/posts/client-server/</link><description>Recent content in Client Server on Marius Chiriac</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><lastBuildDate>Fri, 16 Jul 2021 00:00:00 +0000</lastBuildDate><atom:link href="https://mariuschiriac.github.io/posts/client-server/index.xml" rel="self" type="application/rss+xml"/><item><title>Stripe payment React-Flask</title><link>https://mariuschiriac.github.io/posts/client-server/stripe_checkout/</link><pubDate>Fri, 16 Jul 2021 00:00:00 +0000</pubDate><guid>https://mariuschiriac.github.io/posts/client-server/stripe_checkout/</guid><description>Stripe payment React-Flask Payment Flow User in the React site add items to cart User navigate to cart page User click on &amp;ldquo;Pay with card&amp;rdquo; On user input React call the back-end passing cart and user data Flask validate cart items throught database (pricing and availability) Flask ask Stripe to create a checkout session, then send back session url to React React redirect User to stripe checkout page User perform payment using card Stripe redirect User to success/failed url (the cart React page) If payment success React empty cart and notify User Stripe notify Flask throught webhook about payment completed with basical order info Flask update database and React about buyed items React (front-end) React functional with typescript.</description></item><item><title>Node: Migrate Javascript to Typescript</title><link>https://mariuschiriac.github.io/posts/client-server/migrate_js_ts/</link><pubDate>Wed, 09 Dec 2020 00:00:00 +0000</pubDate><guid>https://mariuschiriac.github.io/posts/client-server/migrate_js_ts/</guid><description>In this guide we will see how to migrate a backend server with node.js 14 and express from javascript to typescript
Why Typescript help developer to write consistent code makes code easier to read and to mantain Converting project The first step is to add the TypeScript compiler. You can install the compiler as a developer dependency using the &amp;ndash;save-dev flag.
npm install --save-dev typescript Based on this tsconfig.</description></item><item><title>Cookies in development using localhost</title><link>https://mariuschiriac.github.io/posts/client-server/cookies/</link><pubDate>Thu, 26 Nov 2020 06:15:55 +0600</pubDate><guid>https://mariuschiriac.github.io/posts/client-server/cookies/</guid><description>In this guide we will see how to config server backend with nodejs and exrepress to test cookies in localhost
Keep In Mind cookies are created server-side the client doesn&amp;rsquo;t handle cookies cookies are saved on the browser server can read the cookies from the client request Setup backend index.js
const express = require('express'); const bodyParser = require('body-parser'); const webpush = require('web-push'); const cors = require('cors'); const cookieParser = require('cookie-parser'); const https = require('https'); const fs = require('fs'); const Auth = require('.</description></item></channel></rss>