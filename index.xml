<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Marius Chiriac</title><link>https://mariuschiriac.github.io/</link><description>Recent content on Marius Chiriac</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><lastBuildDate>Mon, 19 Jul 2021 00:00:00 +0000</lastBuildDate><atom:link href="https://mariuschiriac.github.io/index.xml" rel="self" type="application/rss+xml"/><item><title>Paypal payment React-Flask</title><link>https://mariuschiriac.github.io/posts/client-server/paypal_button/</link><pubDate>Mon, 19 Jul 2021 00:00:00 +0000</pubDate><guid>https://mariuschiriac.github.io/posts/client-server/paypal_button/</guid><description>Paypal payment React-Flask I wrote this guide because there is no code example to implemnt a secure transaction with paypal buttons method with products on own database.
versions year: 2021
React:
node: 14 &amp;ldquo;react&amp;rdquo;: &amp;ldquo;^17.0.2&amp;rdquo; &amp;ldquo;@paypal/react-paypal-js&amp;rdquo;: &amp;ldquo;^7.1.2&amp;rdquo; &amp;ldquo;@reduxjs/toolkit&amp;rdquo;: &amp;ldquo;^1.6.0&amp;rdquo; Flask:
python 3.8.5 flask 2.0.1 Payment Flow User in the React site add items to cart User navigate to cart page User click on &amp;ldquo;Pay with card&amp;rdquo; On user input React call the back-end passing cart and user data Flask validate cart items throught database (pricing and availability).</description></item><item><title>Stripe payment React-Flask</title><link>https://mariuschiriac.github.io/posts/client-server/stripe_checkout/</link><pubDate>Fri, 16 Jul 2021 00:00:00 +0000</pubDate><guid>https://mariuschiriac.github.io/posts/client-server/stripe_checkout/</guid><description>Stripe payment React-Flask Payment Flow User in the React site add items to cart User navigate to cart page User click on &amp;ldquo;Pay with card&amp;rdquo; On user input React call the back-end passing cart and user data Flask validate cart items throught database (pricing and availability) Flask ask Stripe to create a checkout session, then send back session url to React React redirect User to stripe checkout page User perform payment using card Stripe redirect User to success/failed url (the cart React page) If payment success React empty cart and notify User Stripe notify Flask throught webhook about payment completed with basical order info Flask update database and React about buyed items React (front-end) React functional with typescript.</description></item><item><title>Concatenate Timeline</title><link>https://mariuschiriac.github.io/posts/unity/timeline/concatenate/</link><pubDate>Wed, 09 Jun 2021 06:21:10 +0000</pubDate><guid>https://mariuschiriac.github.io/posts/unity/timeline/concatenate/</guid><description>Someway you will need split one timeline into multiple in order to execute different timeline variants with less assets on the bag.
Coroutine that plays 2 timeline at correct time playableDirector.playableAsset = info.timeline[0]; PrepareTimeline(); playableDirector.Play(); yield return new WaitForSeconds((float)playableDirector.playableAsset.duration * Time.timeScale); playableDirector.playableAsset = info.timeline[1]; PrepareTimeline(); playableDirector.Play(); playableDirector is the reference to the PlayableDirector unity component. PrepareTimeline() is a method that fill the timeline&amp;rsquo;s clips with the instanced gameobjects. playableDirector.</description></item><item><title>Unity Timeline</title><link>https://mariuschiriac.github.io/posts/unity/timeline/base/</link><pubDate>Wed, 09 Jun 2021 06:15:55 +0000</pubDate><guid>https://mariuschiriac.github.io/posts/unity/timeline/base/</guid><description>Timeline is a powerfull unity tool that permit to create a temporal sequence of instructions.
Create Timeline Asset In Project right click and select Create&amp;gt;Timeline
That operation create a *.playable file that represent a timeline asset.
Timeline Tracks Here is the official doc about tracks
On the left side of a Timeline we can see which tracks are used. A Track is a type of clips and is shown in horizontal.</description></item><item><title>React: Migrate Javascript to Typescript</title><link>https://mariuschiriac.github.io/posts/react/migrate_js_ts/</link><pubDate>Wed, 16 Dec 2020 00:00:00 +0000</pubDate><guid>https://mariuschiriac.github.io/posts/react/migrate_js_ts/</guid><description>In this guide we will see how to migrate a website with react from javascript to typescript
Why Typescript Code suggestions: Typescript offers suggestions and options while you type. This saves a lot of effort and makes it easier for a new developer to use your source code. These code suggestions prevent wasted time, ease team communication, and make your codebase more consistent.
Readability and validation: Since Typescript is a statically-typed system, you can add types to variables, functions, and properties, making your code far easier to read.</description></item><item><title>Node: Migrate Javascript to Typescript</title><link>https://mariuschiriac.github.io/posts/client-server/migrate_js_ts/</link><pubDate>Wed, 09 Dec 2020 00:00:00 +0000</pubDate><guid>https://mariuschiriac.github.io/posts/client-server/migrate_js_ts/</guid><description>In this guide we will see how to migrate a backend server with node.js 14 and express from javascript to typescript
Why Typescript help developer to write consistent code makes code easier to read and to mantain Converting project The first step is to add the TypeScript compiler. You can install the compiler as a developer dependency using the &amp;ndash;save-dev flag.
npm install --save-dev typescript Based on this tsconfig.</description></item><item><title>Chain of Responsibility Pattern</title><link>https://mariuschiriac.github.io/posts/unity/design-patterns/chain_of_responsibility/</link><pubDate>Sun, 06 Dec 2020 06:15:55 +0000</pubDate><guid>https://mariuschiriac.github.io/posts/unity/design-patterns/chain_of_responsibility/</guid><description>Behavioural Design Pattern applied on unity
Pattern explenation Intent Avoid coupling between the sender of a request and the recipient, allowing more than a single object to hear the request. Concatenate the recipient objects and pass the request of object in object until one of these fails to fulfill it.
Applications more than one object can handle a request and the receiver who will handle it is not known a priori.</description></item><item><title>Change timeline dinamically</title><link>https://mariuschiriac.github.io/posts/unity/timeline/dinamic-timeline/</link><pubDate>Thu, 03 Dec 2020 06:15:55 +0000</pubDate><guid>https://mariuschiriac.github.io/posts/unity/timeline/dinamic-timeline/</guid><description>To achieve this result, we need a controller that hold the PlayableDirector and fill the current/correct value to the interested Timeline before to play it. We will use custom PlayableAsset and PlayableBehaviour to add new behaviour into the Timeline
Create Custom Timeline Track Create the TrackAsset to create your custom line track in the timeline, so you will be able to right-click the left side timeline&amp;rsquo;s panel to see the action &amp;ldquo;MovementTrack&amp;rdquo; or what else you named your TrackAsset.</description></item><item><title>Commmand Pattern</title><link>https://mariuschiriac.github.io/posts/unity/design-patterns/command/</link><pubDate>Thu, 03 Dec 2020 06:15:55 +0000</pubDate><guid>https://mariuschiriac.github.io/posts/unity/design-patterns/command/</guid><description>Behavioural Pattern.
Pattern explenation Intent Encapsulate a request as an object, thereby letting you parametrize clients with different requests, queue or log requests, and support undoable operations.
What it solve Need to issue requests to objects without knowing anything about the operation being requested or the receiver of the request.
Applications To parameterize objects with respect to an action to be performed To specify, queue and execute requests at different times To allow the cancellation of operations To organize a system into high-level operations which are themselves based on primitive operations Actors Command Specifies an interface for performing a generic operation ConcreteCommand Defines a link between a target object and an action Implement the Execute method by invoking the corresponding method (s) on the Receiver Keeps the data of the action Client Create a concrete instance of Command and set its Receiver Invoker Asks Command to complete the request Keeps the history of ConcreteCommand used Receiver Knows the way to perform the operations associated with a request.</description></item><item><title>Component Pattern</title><link>https://mariuschiriac.github.io/posts/unity/design-patterns/component/</link><pubDate>Thu, 03 Dec 2020 06:15:55 +0000</pubDate><guid>https://mariuschiriac.github.io/posts/unity/design-patterns/component/</guid><description>Game Programming Pattern.
Pattern explenation Intent Allow a single entity to span multiple domains without coupling the domains to each other
What it solve The creation of big classes that are hard to mantain.
Applications You have a class that touches multiple domains which you want to keep decoupled from each other. A class is getting massive and hard to work with You want to be able to define a variety of objects that share different capabilities, but using inheritance doesnâ€™t let you pick the parts you want to reuse precisely enough.</description></item><item><title>Object Pool Pattern</title><link>https://mariuschiriac.github.io/posts/unity/design-patterns/object_pool/</link><pubDate>Thu, 03 Dec 2020 06:15:55 +0000</pubDate><guid>https://mariuschiriac.github.io/posts/unity/design-patterns/object_pool/</guid><description>Behavioural Pattern.
Pattern explenation Intent Improve performance and memory use by reusing objects from a fixed pool instead of allocating and freeing them individually.
What it solve Management of list of the same object type
Applications To frequently create and destroy objects. Objects are similar in size. Allocating objects on the heap is slow or could lead to memory fragmentation. Each object encapsulates a resource such as a database or network connection that is expensive to acquire and could be reused.</description></item><item><title>Integration of javascript in Unity WEBGL build</title><link>https://mariuschiriac.github.io/posts/unity/webgl_integration/</link><pubDate>Sun, 29 Nov 2020 10:15:55 +0600</pubDate><guid>https://mariuschiriac.github.io/posts/unity/webgl_integration/</guid><description>In this guide we will see how to integrate javascript functions in unity game with WEBGL build
Workflow from unity script call a plugin that comunicate to the script where the build is placed the plugin function have only the work to call a javascript function of site environment change the javascript function without rebuilding everytime Create the plugin plugin.jslib
var plugin = { CallFunction: function() { CustomFunction(); } }; mergeInto(LibraryManager.</description></item><item><title>Cookies in development using localhost</title><link>https://mariuschiriac.github.io/posts/client-server/cookies/</link><pubDate>Thu, 26 Nov 2020 06:15:55 +0600</pubDate><guid>https://mariuschiriac.github.io/posts/client-server/cookies/</guid><description>In this guide we will see how to config server backend with nodejs and exrepress to test cookies in localhost
Keep In Mind cookies are created server-side the client doesn&amp;rsquo;t handle cookies cookies are saved on the browser server can read the cookies from the client request Setup backend index.js
const express = require('express'); const bodyParser = require('body-parser'); const webpush = require('web-push'); const cors = require('cors'); const cookieParser = require('cookie-parser'); const https = require('https'); const fs = require('fs'); const Auth = require('.</description></item></channel></rss>